/**
 * @author Raneem Kayyali
 * Date: 3/11/2018
 */
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.Timer;

public class ClockIn_ClockOut extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ClockIn_ClockOut() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JButton clockInBtn = new javax.swing.JButton();
        javax.swing.JButton clockOutBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        javax.swing.JTextArea textArea = new javax.swing.JTextArea();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JComboBox<String> idBox = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JComboBox<String> nameBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TimeClock");

        ClockLabel dateLable = new ClockLabel("date");
        ClockLabel timeLable = new ClockLabel("time");
        ClockLabel dayLable = new ClockLabel("day");

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(300,150);
        setLayout(new GridLayout(3, 1));
        add(dateLable);
        add(timeLable);
        add(dayLable);

        setVisible(true);
        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        clockInBtn.setText("Clock-in");

        clockOutBtn.setText("Clock-out");

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        textArea.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane2.setViewportView(textArea);
        idBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {

                JComboBox idBox = (JComboBox) event.getSource();

                Object selected = idBox.getSelectedItem();
                if(selected.toString().equals("mmartz"))
                nameBox.setSelectedIndex(2);
                else if(selected.toString().equals("scarver"))
                nameBox.setSelectedIndex(1);
                else if(selected.toString().equals("arichards5"))
                nameBox.setSelectedIndex(3);
                else if(selected.toString().equals("jsmith26"))
                nameBox.setSelectedIndex(4);
                else
                nameBox.setSelectedIndex(0);
            }
        });

        nameBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {

                JComboBox nameBox = (JComboBox) event.getSource();

                Object selectName = nameBox.getSelectedItem();
                if(selectName.toString().equals("Mike Martz"))
                idBox.setSelectedIndex(2);
                else if(selectName.toString().equals("Steve Carver"))
                idBox.setSelectedIndex(1);
                else if(selectName.toString().equals("Amanda Richards"))
                idBox.setSelectedIndex(3);
                else if(selectName.toString().equals("John Smith"))
                idBox.setSelectedIndex(4);
                else
                idBox.setSelectedIndex(0);
            }
        });

        clockInBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(!nameBox.getSelectedItem().toString().equals("[Select Name]") &&
                    !idBox.getSelectedItem().toString().equals("[Select ID]")){
                    for(int i = 0; i < 1; i++){
                        LocalDateTime now = LocalDateTime.now();
                        String isoFormat = DateTimeFormatter.ISO_INSTANT.format(now.toInstant(ZoneOffset.UTC));
                        String text = nameBox.getSelectedItem().toString();
                        textArea.append(text + " clocked in on " + isoFormat + "\n");
                    }
                    clockInBtn.setEnabled(false);
                }
                else {
                    String message = "Select ID and Name to clock in";
                    JOptionPane.showMessageDialog(new JFrame(), message, "Error",
                        JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        idBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {

                JComboBox idBox = (JComboBox) event.getSource();

                Object selected = idBox.getSelectedItem();
                if(selected.toString().equals("mmartz"))
                clockInBtn.setEnabled(true);
                if(selected.toString().equals("scarver"))
                clockInBtn.setEnabled(true);
                else if(selected.toString().equals("arichards5"))
                clockInBtn.setEnabled(true);
                else if(selected.toString().equals("jsmith26"))
                clockInBtn.setEnabled(true);
                else
                clockInBtn.setEnabled(true);
            }
        });
        clockOutBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(!nameBox.getSelectedItem().toString().equals("[Select Name]") &&
                    !idBox.getSelectedItem().toString().equals("[Select ID]")){
                    for(int i = 0; i < 1; i++){
                        LocalDateTime now = LocalDateTime.now();
                        String isoFormat = DateTimeFormatter.ISO_INSTANT.format(now.toInstant(ZoneOffset.UTC));
                        String text = nameBox.getSelectedItem().toString();
                        textArea.append(text + " clocked out " + isoFormat + "\n");
                    }
                    clockOutBtn.setEnabled(false);
                }
                else {
                    String message = "Select ID and Name to clock out";
                    JOptionPane.showMessageDialog(new JFrame(), message, "Error",
                        JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        idBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {

                JComboBox idBox = (JComboBox) event.getSource();

                Object selected = idBox.getSelectedItem();
                if(selected.toString().equals("mmartz"))
                clockOutBtn.setEnabled(true);
                if(selected.toString().equals("scarver"))
                clockOutBtn.setEnabled(true);
                else if(selected.toString().equals("arichards5"))
                clockOutBtn.setEnabled(true);
                else if(selected.toString().equals("jsmith26"))
                clockOutBtn.setEnabled(true);
                else
                clockOutBtn.setEnabled(true);
            }
        });

        jLabel1.setText("ID");

        idBox.setEditable(true);
        idBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Select ID]", "scarver", "mmartz", "arichards5", "jsmith26" }));
        idBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setText("Name");

        nameBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[Select Name]", "Steve Carver", "Mike Martz", "Amanda Richards", "John Smith" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(clockInBtn)
                        .addGap(45, 45, 45)
                        .addComponent(clockOutBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockInBtn)
                            .addComponent(clockOutBtn))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(idBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 40, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClockIn_ClockOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClockIn_ClockOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClockIn_ClockOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClockIn_ClockOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClockIn_ClockOut().setVisible(true);
            }
        });

    }
    
    class ClockLabel extends JLabel implements ActionListener {
 
  String type;
  SimpleDateFormat sdf;
 
  public ClockLabel(String type) {
    this.type = type;
    setForeground(Color.black);
 
    switch (type) {
      case "date" : sdf = new SimpleDateFormat("  MMMM dd yyyy");
                    setFont(new Font("sans-serif", Font.PLAIN, 12));
                    setHorizontalAlignment(SwingConstants.LEFT);
                    break;
      case "time" : sdf = new SimpleDateFormat("hh:mm:ss a");
                    setFont(new Font("sans-serif", Font.PLAIN, 40));
                    setHorizontalAlignment(SwingConstants.CENTER);
                    break;
      case "day"  : sdf = new SimpleDateFormat("EEEE  ");
                    setFont(new Font("sans-serif", Font.PLAIN, 16));
                    setHorizontalAlignment(SwingConstants.RIGHT);
                    break;
      default     : sdf = new SimpleDateFormat();
                    break;
    }
 
    Timer t = new Timer(1000, this);
    t.start();
  }
 
  public void actionPerformed(ActionEvent ae) {
    Date d = new Date();
    setText(sdf.format(d));
  }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
